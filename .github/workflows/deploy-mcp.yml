name: Deploy Archon MCP to Cloud Run

on:
  push:
    branches:
      - main
    paths:
      - 'python/**'
      - '.github/workflows/deploy-mcp.yml'
      - '.env.cloudrun'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  SERVICE_NAME: archon-mcp

jobs:
  deploy:
    name: Deploy MCP Server
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --source . \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 8080 \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 5 \
            --timeout 300 \
            --concurrency 80 \
            --set-env-vars SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
            --set-env-vars SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }} \
            --set-env-vars LOG_LEVEL=INFO \
            --set-env-vars PROD=true \
            --set-env-vars ARCHON_MCP_PORT=8080 \
            --labels service=archon,component=mcp,env=production

      - name: Get Service URL
        id: service-url
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "::notice::MCP Server deployed at $URL"

      - name: Run Health Check
        run: |
          sleep 10
          curl -f ${{ steps.service-url.outputs.url }}/health || exit 1
